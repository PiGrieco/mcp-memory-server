# Production Environment Configuration
# Optimized for high performance, security, and reliability

# Server Configuration
server:
  name: "MCP Memory Server (Production)"
  version: "2.0.0"
  mode: "universal"
  host: "0.0.0.0"
  port: 8000
  debug: false
  log_level: "INFO"

# Environment Configuration
environment:
  name: "production"
  debug: false
  testing: false

# Database Configuration (Production - High Performance)
database:
  mongodb:
    uri: "mongodb://mongodb:27017"
    database: "mcp_memory_prod"
    username: "${MONGODB_USERNAME}"
    password: "${MONGODB_PASSWORD}"
    auth_source: "admin"
    max_pool_size: 50
    min_pool_size: 10
    max_idle_time: 60000
    server_selection_timeout: 10000
    socket_timeout: 10000
    connect_timeout: 10000
    # Production optimizations
    read_preference: "secondaryPreferred"
    write_concern: "majority"
    retry_writes: true

# Embedding Service Configuration (Production)
embedding:
  model_name: "sentence-transformers/all-MiniLM-L6-v2"
  model_path: "/app/models/embeddings"
  cache_size: 10000
  batch_size: 64
  max_length: 512
  device: "auto"  # Auto-detect GPU/CPU
  download_if_missing: false  # Models should be pre-downloaded

# Memory Service Configuration (Production)
memory:
  auto_save:
    enabled: true
    threshold: 0.8
    min_content_length: 50
    max_content_length: 15000
  search:
    max_results: 20
    similarity_threshold: 0.6
    include_embeddings: false  # Performance optimization
  retention:
    max_memories: 1000000  # 1M memories
    cleanup_interval: 86400  # 24 hours

# Plugin System Configuration (Production)
plugins:
  directory: "/app/plugins"
  auto_load: true
  enabled_plugins: ["memory_analytics", "backup_manager", "notification_service"]
  disabled_plugins: []
  plugin_config:
    memory_analytics:
      analytics_enabled: true
      metrics_retention_days: 90
      insights_enabled: true
    backup_manager:
      auto_backup: true
      backup_interval: 86400  # 24 hours
    notification_service:
      enabled: true
      alert_threshold: 0.1

# Cache Configuration (Production - Redis)
cache:
  redis_enabled: true
  redis_host: "redis"
  redis_port: 6379
  redis_password: "${REDIS_PASSWORD}"
  redis_db: 0
  memory_ttl: 7200  # 2 hours
  search_ttl: 3600  # 1 hour
  max_memory_size: 10000
  # Redis cluster configuration
  redis_cluster:
    enabled: false
    nodes: []
    max_connections: 100

# Backup Configuration (Production)
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention_days: 90
  compression: true
  storage:
    type: "s3"  # Use S3 for production
    path: "s3://mcp-memory-backups"
    credentials:
      access_key: "${AWS_ACCESS_KEY_ID}"
      secret_key: "${AWS_SECRET_ACCESS_KEY}"
      region: "${AWS_REGION}"

# Notification Configuration (Production)
notifications:
  enabled: true
  providers:
    email:
      enabled: true
      smtp_host: "${SMTP_HOST}"
      smtp_port: 587
      username: "${SMTP_USERNAME}"
      password: "${SMTP_PASSWORD}"
      from_email: "${FROM_EMAIL}"
      to_emails: ["${ADMIN_EMAIL}"]
      tls: true
    webhook:
      enabled: true
      url: "${WEBHOOK_URL}"
      headers:
        Authorization: "Bearer ${WEBHOOK_TOKEN}"
      timeout: 30
      retry_attempts: 3

# Export Configuration (Production)
export:
  formats: ["json", "csv", "markdown"]
  compression: true
  include_embeddings: false
  batch_size: 500
  max_file_size: 104857600  # 100MB
  storage:
    type: "s3"
    bucket: "mcp-memory-exports"

# Monitoring Configuration (Production)
monitoring:
  enabled: true
  metrics_port: 9090
  health_check_interval: 30
  log_metrics: true
  alerting:
    enabled: true
    webhook_url: "${ALERT_WEBHOOK_URL}"
    email_alerts: true
    slack_alerts: true
    slack_webhook: "${SLACK_WEBHOOK_URL}"

# Paths Configuration (Production)
paths:
  data_dir: "/app/data"
  logs_dir: "/app/logs"
  models_dir: "/app/models"
  plugins_dir: "/app/plugins"
  exports_dir: "/app/exports"
  backups_dir: "/app/backups"

# Security Configuration (Production - Strict)
security:
  api_key_required: true
  api_key: "${API_KEY}"
  cors_enabled: true
  cors_origins: ["https://yourdomain.com", "https://app.yourdomain.com"]
  rate_limiting:
    enabled: true
    requests_per_minute: 100
    burst_limit: 200
  # Additional security
  ssl_required: true
  session_timeout: 3600
  max_login_attempts: 5
  password_policy:
    min_length: 12
    require_uppercase: true
    require_lowercase: true
    require_numbers: true
    require_special: true

# Performance Configuration (Production)
performance:
  max_concurrent_requests: 500
  request_timeout: 30
  memory_limit: "4GB"
  worker_processes: 8
  # Load balancing
  load_balancer:
    enabled: true
    algorithm: "round_robin"
    health_check_path: "/health"
    health_check_interval: 30

# Logging Configuration (Production)
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file_rotation: true
  max_file_size: "100MB"
  backup_count: 10
  console_output: false
  file_output: true
  # Structured logging
  structured_logging: true
  log_format: "json"
  # Log aggregation
  log_aggregation:
    enabled: true
    endpoint: "${LOG_AGGREGATION_ENDPOINT}"
    batch_size: 100
    flush_interval: 5

# Production Specific Settings
production:
  # High availability
  high_availability:
    enabled: true
    replicas: 3
    auto_scaling: true
    min_replicas: 2
    max_replicas: 10
  
  # Disaster recovery
  disaster_recovery:
    enabled: true
    backup_strategy: "daily"
    recovery_time_objective: 3600  # 1 hour
    recovery_point_objective: 3600  # 1 hour
  
  # Performance monitoring
  performance_monitoring:
    enabled: true
    apm_enabled: true
    profiling_enabled: false  # Only enable when needed
    metrics_collection: true
  
  # Security monitoring
  security_monitoring:
    enabled: true
    audit_logging: true
    intrusion_detection: true
    vulnerability_scanning: true 