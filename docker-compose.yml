version: '3.8'

services:
  # Main API Gateway
  api-gateway:
    build: .
    container_name: mcp-memory-api-gateway
    ports:
      - "8000:8000"
    environment:
      - SERVICE_TYPE=api-gateway
      - MONGODB_MASTER_CONNECTION=${MONGODB_MASTER_CONNECTION}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - API_BASE_URL=${API_BASE_URL:-http://localhost:8000}
    command: ["python", "cloud/api_gateway.py"]
    volumes:
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - mcp-network

  # Billing Service
  billing-service:
    build: .
    container_name: mcp-memory-billing
    ports:
      - "8001:8001"
    environment:
      - SERVICE_TYPE=billing
      - MONGODB_MASTER_CONNECTION=${MONGODB_MASTER_CONNECTION}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    command: ["python", "cloud/billing_system.py"]
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - mcp-network

  # Web Frontend
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: mcp-memory-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=${API_BASE_URL:-http://localhost:8000}
      - REACT_APP_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
    restart: unless-stopped
    networks:
      - mcp-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: mcp-memory-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - mcp-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: mcp-memory-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
      - frontend
    restart: unless-stopped
    networks:
      - mcp-network

  # Background Worker for heavy tasks
  worker:
    build: .
    container_name: mcp-memory-worker
    environment:
      - SERVICE_TYPE=worker
      - MONGODB_MASTER_CONNECTION=${MONGODB_MASTER_CONNECTION}
      - REDIS_URL=redis://redis:6379
    command: ["python", "cloud/background_worker.py"]
    volumes:
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - mcp-network

volumes:
  redis-data:

networks:
  mcp-network:
    driver: bridge 